function T = dj_uncertainflashinference_summarytable(D, cond)
% This function returns the summary table (day- or stage-specific) from the
% trial table generated by the dj_uncertainflashinference_trialtable
% function.
% 
% Maxime Maheu <maheu.mp@gmail.com> | 2024

% Get info from the table
ratname = unique(D.name);
dates = cellfun(@(x) erase(x(1:10), '-'), D.trial_inittime, 'uni', 0);

% Separately for night/day
T = struct;
k = 1;
for isday = 0:1
    isdayi = (D.isday == isday);
    
    % Get levels over which to average bahavior
    switch cond
        case 'stage', levels = num2cell(unique(D.stage(isdayi)));
        case 'day',   levels = unique(dates(isdayi));
    end
    
    % Loop over unique levels
    N = numel(levels);
    for i = 1:N
        
        % Get trial indices
        switch cond
            case 'stage', trli = (D.isday == isday) & (D.stage == levels{i});
            case 'day',   trli = (D.isday == isday) & strcmpi(dates, levels{i});
        end
        cmpi = contains(D.outcome, 'correct') | contains(D.outcome, 'error');
        
        % Build table
        if sum(trli) > 1
            T(k).name          = ratname{1};
            T(k).(cond)        = levels{i};
            T(k).isday         = isday;
            % -----------------------------------------------------------------
            T(k).trials        = sum(trli);
            T(k).reward_rate   = mean(contains(D.outcome(trli), 'correct'));
            T(k).accuracy      = mean(contains(D.outcome(trli & cmpi), 'correct')); % completed trials
            T(k).p_right       = mean(contains(D.choice(trli & cmpi), 'right')); % completed trials
            T(k).omission_rate = mean(contains(D.outcome(trli), 'omission'));
            T(k).early_rate    = mean(contains(D.outcome(trli), {'early', 'brokenfix'}));
            T(k).rt            = median(D.rt_side(trli & cmpi)); % completed trials
            T(k).it            = median(D.it(trli & cmpi)); % completed trials
            
            % Replace NaNs by placeholders
            if sum(trli & cmpi) == 0
                T(k).accuracy = -10;
                T(k).p_right  = -10;
                T(k).rt       = -10;
                T(k).it       = -10;
            end
            k = k + 1;
        end
    end
end

end